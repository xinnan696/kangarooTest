<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c83df101-5dac-4834-a275-e4203aa22126" name="Changes" comment="Die.scala:&#10;A simple class that generates random directions and keeps track of how many times each direction is chosen. The roll() method returns a random direction and updates the statistics. The printStats() method outputs the statistics for each direction.&#10;&#10;Point.scala:&#10;Represents the kangaroo's position with two attributes, x and y.&#10;&#10;Command.scala:&#10;Represents the kangaroo. It stores the kangaroo's current position, manages the logic for its movement, and checks boundaries. The move() method updates the kangaroo's position based on the die's direction, while the isAtHome() method checks if the kangaroo has reached the target position.&#10;&#10;Kangaroo.scala:&#10;The main program is responsible for receiving the user's input for the grid size, creating the die and kangaroo objects, and simulating the kangaroo's hopping until it reaches the target position.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Scala Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 7
}]]></component>
  <component name="ProjectId" id="2ltZ9jOMRGVzhNADSxAfUTBbqq4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.Kangaroo.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "master",
    "kotlin-language-version-configured": "true",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="Kangaroo" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="Kangaroo" />
      <module name="Kangaroo" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Kangaroo" />
      </list>
    </recent_temporary>
  </component>
  <component name="ScalaProjectSettings">
    <option name="migrateConfigurationsNotificationShown" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c83df101-5dac-4834-a275-e4203aa22126" name="Changes" comment="" />
      <created>1726001186149</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726001186149</updated>
    </task>
    <task id="LOCAL-00001" summary="Die.scala:&#10;A simple class that generates random directions and keeps track of how many times each direction is chosen. The roll() method returns a random direction and updates the statistics. The printStats() method outputs the statistics for each direction.&#10;&#10;Point.scala:&#10;Represents the kangaroo's position with two attributes, x and y.&#10;&#10;Command.scala:&#10;Represents the kangaroo. It stores the kangaroo's current position, manages the logic for its movement, and checks boundaries. The move() method updates the kangaroo's position based on the die's direction, while the isAtHome() method checks if the kangaroo has reached the target position.&#10;&#10;Kangaroo.scala:&#10;The main program is responsible for receiving the user's input for the grid size, creating the die and kangaroo objects, and simulating the kangaroo's hopping until it reaches the target position.">
      <option name="closed" value="true" />
      <created>1726003319956</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1726003319956</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Die.scala:&#10;A simple class that generates random directions and keeps track of how many times each direction is chosen. The roll() method returns a random direction and updates the statistics. The printStats() method outputs the statistics for each direction.&#10;&#10;Point.scala:&#10;Represents the kangaroo's position with two attributes, x and y.&#10;&#10;Command.scala:&#10;Represents the kangaroo. It stores the kangaroo's current position, manages the logic for its movement, and checks boundaries. The move() method updates the kangaroo's position based on the die's direction, while the isAtHome() method checks if the kangaroo has reached the target position.&#10;&#10;Kangaroo.scala:&#10;The main program is responsible for receiving the user's input for the grid size, creating the die and kangaroo objects, and simulating the kangaroo's hopping until it reaches the target position." />
    <option name="LAST_COMMIT_MESSAGE" value="Die.scala:&#10;A simple class that generates random directions and keeps track of how many times each direction is chosen. The roll() method returns a random direction and updates the statistics. The printStats() method outputs the statistics for each direction.&#10;&#10;Point.scala:&#10;Represents the kangaroo's position with two attributes, x and y.&#10;&#10;Command.scala:&#10;Represents the kangaroo. It stores the kangaroo's current position, manages the logic for its movement, and checks boundaries. The move() method updates the kangaroo's position based on the die's direction, while the isAtHome() method checks if the kangaroo has reached the target position.&#10;&#10;Kangaroo.scala:&#10;The main program is responsible for receiving the user's input for the grid size, creating the die and kangaroo objects, and simulating the kangaroo's hopping until it reaches the target position." />
  </component>
</project>